{"version":3,"file":"index.js","sources":["../src/actions/copy.js","../src/actions/move.js","../src/actions/delete.js","../src/actions/mkdir.js","../src/actions/archive.js","../src/options-schema.js","../src/index.js"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport makeDir from 'make-dir';\nimport cpy from 'cpy';\nimport cpFile from 'cp-file';\n\n/**\n * Execute copy action\n *\n * @param {Object} command - Command data for given action\n * @return {Function|null} - Function that returns a promise or null\n */\nfunction copyAction(command, options) {\n  const { verbose, context } = options;\n\n  return () =>\n    new Promise((resolve, reject) => {\n      // if source is a file, just copyFile()\n      // if source is a NOT a glob pattern, simply append **/*\n      const fileRegex = /(\\*|\\{+|\\}+)/g;\n      const matches = fileRegex.exec(command.source);\n\n      if (matches === null) {\n        const source = path.resolve(context, command.source);\n\n        fs.lstat(source, (sErr, sStats) => {\n          if (sErr) return reject(sErr);\n\n          fs.lstat(command.destination, (dErr, dStats) => {\n            if (sStats.isFile()) {\n              const destination =\n                dStats && dStats.isDirectory()\n                  ? path.resolve(context, command.destination + '/' + path.basename(command.source))\n                  : path.resolve(context, command.destination);\n\n              if (verbose) {\n                console.log(\n                  `  - FileManagerPlugin: Start copy source: ${command.source} to destination: ${destination}`\n                );\n              }\n\n              const pathInfo = path.parse(destination);\n              if (pathInfo.ext === '') {\n                makeDir(destination).then(() => {\n                  cpFile(source, path.resolve(destination, path.basename(source)))\n                    .then(resolve)\n                    .catch(reject);\n                });\n              } else {\n                cpFile(source, destination).then(resolve).catch(reject);\n              }\n            } else {\n              const sourceDir = command.source + (command.source.substr(-1) !== '/' ? '/' : '') + '**/*';\n              copy(sourceDir, command.destination, resolve, reject, options);\n            }\n          });\n        });\n      } else {\n        copy(command.source, command.destination, resolve, reject, options);\n      }\n    });\n}\n\n/**\n * Execute copy directory\n *\n * @param {string} source - source file path\n * @param {string} destination - destination file path\n * @param {Function} resolve - function used to resolve a Promise\n * @param {Function} reject - function used to reject a Promise\n * @return {void}\n */\nfunction copy(source, destination, resolve, reject, options) {\n  const { verbose, context } = options;\n\n  /* cpy options */\n  const cpyOptions = {\n    cwd: context,\n  };\n\n  if (verbose) {\n    console.log(`  - FileManagerPlugin: Start copy source file: ${source} to destination file: ${destination}`);\n  }\n\n  cpy(source, destination, cpyOptions)\n    .then(() => {\n      if (verbose) {\n        console.log(`  - FileManagerPlugin: Finished copy source: ${source} to destination: ${destination}`);\n      }\n\n      resolve();\n    })\n    .catch((err) => {\n      if (err && options.verbose) {\n        console.log('  - FileManagerPlugin: Error - copy failed', err);\n        return reject(err);\n      }\n    });\n}\n\nexport default copyAction;\n","const fs = require('fs');\nconst mv = require('mv');\n\n/**\n * Execute move action\n *\n * @param {Object} command - Command data for given action\n * @return {Function|null} - Function that returns a promise or null\n */\nfunction moveAction(command, options) {\n  const { verbose } = options;\n\n  if (fs.existsSync(command.source)) {\n    return () =>\n      new Promise((resolve, reject) => {\n        if (verbose) {\n          console.log(\n            `  - FileManagerPlugin: Start move source: ${command.source} to destination: ${command.destination}`\n          );\n        }\n\n        mv(command.source, command.destination, { mkdirp: false }, (err) => {\n          if (err) {\n            if (verbose) {\n              console.log('  - FileManagerPlugin: Error - move failed', err);\n            }\n            reject(err);\n          }\n\n          if (verbose) {\n            console.log(\n              `  - FileManagerPlugin: Finished move source: ${command.source} to destination: ${command.destination}`\n            );\n          }\n\n          resolve();\n        });\n      });\n  } else {\n    process.emitWarning('  - FileManagerPlugin: Could not move ' + command.source + ': path does not exist');\n    return null;\n  }\n}\n\nexport default moveAction;\n","const path = require('path');\nconst rimraf = require('rimraf');\n\n/**\n * Execute delete action\n *\n * @param {Object} command - Command data for given action\n * @return {Function|null} - Function that returns a promise or null\n */\nfunction deleteAction(command, options) {\n  const { verbose, context } = options;\n\n  return () =>\n    new Promise((resolve, reject) => {\n      if (verbose) {\n        console.log(`  - FileManagerPlugin: Starting delete path ${command.source}`);\n      }\n\n      const source = path.resolve(context, command.source);\n\n      rimraf(source, {}, (response) => {\n        if (verbose && response === null) {\n          console.log(`  - FileManagerPlugin: Finished delete path ${command.source}`);\n        }\n        resolve();\n      });\n    });\n}\n\nexport default deleteAction;\n","import path from 'path';\n\nimport makeDir from 'make-dir';\n\n/**\n * Execute mkdir action\n *\n * @param {Object} command - Command data for given action\n * @return {Function|null} - Function that returns a promise or null\n */\nfunction mkdirAction(command, options) {\n  const { verbose, context } = options;\n\n  return () => {\n    if (verbose) {\n      console.log(`  - FileManagerPlugin: Creating path ${command.source}`);\n    }\n\n    const source = path.resolve(context, command.source);\n    return makeDir(source);\n  };\n}\n\nexport default mkdirAction;\n","import fs from 'fs';\nimport path from 'path';\nimport archiver from 'archiver';\n\n/**\n * Execute mkdir action\n *\n * @param {Object} command - Command data for given action\n * @return {Function|null} - Function that returns a promise or null\n */\nfunction archiveAction(command, options) {\n  const { context } = options;\n\n  const source = path.resolve(context, command.source);\n  const destination = path.resolve(context, command.destination);\n\n  return () =>\n    new Promise((resolve, reject) => {\n      const fileRegex = /(\\*|\\{+|\\}+)/g;\n      const matches = fileRegex.exec(command.source);\n\n      const isGlob = matches !== null;\n\n      fs.lstat(source, (sErr, sStats) => {\n        if (!fs.existsSync(path.dirname(destination))) {\n          fs.mkdirSync(path.dirname(destination), { recursive: true });\n        }\n\n        const output = fs.createWriteStream(destination);\n        const archive = archiver(command.format, command.options);\n\n        archive.on('error', (err) => reject(err));\n        archive.pipe(output);\n\n        // Exclude destination file from archive\n        const destFile = path.basename(destination);\n        const globOptions = Object.assign({ ignore: destFile }, command.options.globOptions || {});\n\n        if (isGlob) {\n          archive.glob(command.source, {\n            ...globOptions,\n            cwd: context,\n          });\n        } else if (sStats.isFile()) {\n          archive.file(source, {\n            name: path.basename(command.source),\n            cwd: context,\n          });\n        } else if (sStats.isDirectory()) {\n          archive.glob('**/*', {\n            cwd: source,\n            ignore: destFile,\n          });\n        }\n\n        archive.finalize().then(resolve);\n      });\n    });\n}\n\nexport default archiveAction;\n","export default {\n  title: 'FileManagerPluginOptions',\n  type: 'object',\n  additionalProperties: false,\n  definitions: {\n    Copy: {\n      description: 'Copy individual files or entire directories from a source folder to a destination folder',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      itmes: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Copy source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Copy destination',\n              type: 'string',\n              minLength: 1,\n            },\n          },\n        },\n      ],\n    },\n    Delete: {\n      description: 'Delete individual files or entire directories',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      items: {\n        type: 'string',\n      },\n    },\n    Move: {\n      description: 'Move individual files or entire directories from a source folder to a destination folder',\n      type: 'array',\n      additionalItems: true,\n      items: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Move source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Move destination',\n              type: 'string',\n              minLength: 1,\n            },\n          },\n        },\n      ],\n    },\n    Mkdir: {\n      description: 'Create Directories',\n      type: 'array',\n      minItems: 1,\n      additionalItems: true,\n      items: {\n        type: 'string',\n      },\n    },\n    Archive: {\n      description: 'Archive individual files or entire directories.',\n      type: 'array',\n      additionalItems: true,\n      items: [\n        {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            source: {\n              description: 'Source. A file or directory or a glob',\n              type: 'string',\n              minLength: 1,\n            },\n            destination: {\n              description: 'Archive destination',\n              type: 'string',\n              minLength: 1,\n            },\n            format: {\n              type: 'string',\n              enum: ['zip', 'tar'],\n            },\n            options: {\n              additionalProperties: true,\n              type: 'object',\n              description: 'Options to forward to archiver',\n            },\n          },\n        },\n      ],\n    },\n    Events: {\n      type: 'object',\n      additionalProperties: true,\n      properties: {\n        copy: {\n          $ref: '#/definitions/Copy',\n        },\n        delete: {\n          $ref: '#/definitions/Delete',\n        },\n        move: {\n          $ref: '#/definitions/Move',\n        },\n        mkdir: {\n          $ref: '#/definitions/Mkdir',\n        },\n        archive: {\n          $ref: '#/definitions/Archive',\n        },\n      },\n    },\n  },\n  properties: {\n    onStart: {\n      $ref: '#/definitions/Events',\n    },\n    onEnd: {\n      $ref: '#/definitions/Events',\n    },\n  },\n};\n","import validateOptions from 'schema-utils';\n\nimport { copyAction, moveAction, mkdirAction, archiveAction, deleteAction } from './actions';\n\nimport schema from './options-schema';\n\nconst PLUGIN_NAME = 'FileManagerPlugin';\n\nclass FileManagerPlugin {\n  constructor(options) {\n    validateOptions(schema, options, {\n      name: PLUGIN_NAME,\n      baseDataPath: 'options',\n    });\n\n    this.options = this.setOptions(options);\n  }\n\n  setOptions(userOptions) {\n    const defaultOptions = {\n      verbose: false,\n      moveWithMkdirp: false,\n      onStart: {},\n      onEnd: {},\n    };\n\n    for (const key in defaultOptions) {\n      if (userOptions.hasOwnProperty(key)) {\n        defaultOptions[key] = userOptions[key];\n      }\n    }\n\n    return defaultOptions;\n  }\n\n  checkOptions(stage) {\n    if (this.options.verbose && Object.keys(this.options[stage]).length) {\n      console.log(`FileManagerPlugin: processing ${stage} event`);\n    }\n\n    let operationList = [];\n\n    if (this.options[stage] && Array.isArray(this.options[stage])) {\n      this.options[stage].map((opts) => operationList.push(...this.parseFileOptions(opts, true)));\n    } else {\n      operationList.push(...this.parseFileOptions(this.options[stage]));\n    }\n\n    if (operationList.length) {\n      operationList.reduce((previous, fn) => {\n        return previous.then((retVal) => fn(retVal)).catch((err) => console.log(err));\n      }, Promise.resolve());\n    }\n  }\n\n  replaceHash(filename) {\n    return filename.replace('[hash]', this.fileHash);\n  }\n\n  processAction(action, params, commandOrder) {\n    const options = {\n      ...this.options,\n      context: this.context,\n    };\n    const result = action(params, options);\n\n    if (result !== null) {\n      commandOrder.push(result);\n    }\n  }\n\n  parseFileOptions(options) {\n    let commandOrder = [];\n\n    Object.keys(options).forEach((actionType) => {\n      const actionOptions = options[actionType];\n      let actionParams = null;\n\n      actionOptions.forEach((actionItem) => {\n        switch (actionType) {\n          case 'copy':\n            actionParams = Object.assign(\n              { source: this.replaceHash(actionItem.source) },\n              actionItem.destination && { destination: actionItem.destination }\n            );\n\n            this.processAction(copyAction, actionParams, commandOrder);\n\n            break;\n\n          case 'move':\n            actionParams = Object.assign(\n              { source: this.replaceHash(actionItem.source) },\n              actionItem.destination && { destination: actionItem.destination }\n            );\n\n            this.processAction(moveAction, actionParams, commandOrder);\n\n            break;\n\n          case 'delete':\n            if (!Array.isArray(actionOptions) || typeof actionItem !== 'string') {\n              throw Error(`  - FileManagerPlugin: Fail - delete parameters has to be an array of strings`);\n            }\n\n            actionParams = Object.assign({ source: this.replaceHash(actionItem) });\n            this.processAction(deleteAction, actionParams, commandOrder);\n\n            break;\n\n          case 'mkdir':\n            actionParams = { source: this.replaceHash(actionItem) };\n            this.processAction(mkdirAction, actionParams, commandOrder);\n\n            break;\n\n          case 'archive':\n            actionParams = {\n              source: this.replaceHash(actionItem.source),\n              destination: actionItem.destination,\n              format: actionItem.format ? actionItem.format : 'zip',\n              options: actionItem.options ? actionItem.options : { zlib: { level: 9 } },\n            };\n\n            this.processAction(archiveAction, actionParams, commandOrder);\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n\n    return commandOrder;\n  }\n\n  apply(compiler) {\n    this.context = compiler.options.context;\n\n    const comp = (compilation) => {\n      try {\n        this.checkOptions('onStart');\n      } catch (error) {\n        compilation.errors.push(error);\n      }\n    };\n\n    const afterEmit = (compilation, cb) => {\n      this.fileHash = compilation.hash;\n\n      try {\n        this.checkOptions('onEnd');\n      } catch (error) {\n        compilation.errors.push(error);\n      }\n\n      cb();\n    };\n\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, comp);\n    compiler.hooks.afterEmit.tapAsync(PLUGIN_NAME, afterEmit);\n  }\n}\n\nexport default FileManagerPlugin;\n"],"names":["copyAction","command","options","verbose","context","Promise","resolve","reject","fileRegex","matches","exec","source","path","fs","lstat","sErr","sStats","destination","dErr","dStats","isFile","isDirectory","basename","console","log","pathInfo","parse","ext","makeDir","then","cpFile","catch","sourceDir","substr","copy","cpyOptions","cwd","cpy","err","require","mv","moveAction","existsSync","mkdirp","process","emitWarning","rimraf","deleteAction","response","mkdirAction","archiveAction","isGlob","dirname","mkdirSync","recursive","output","createWriteStream","archive","archiver","format","on","pipe","destFile","globOptions","Object","assign","ignore","glob","file","name","finalize","title","type","additionalProperties","definitions","Copy","description","minItems","additionalItems","itmes","properties","minLength","Delete","items","Move","Mkdir","Archive","enum","Events","$ref","delete","move","mkdir","onStart","onEnd","PLUGIN_NAME","FileManagerPlugin","validateOptions","schema","baseDataPath","setOptions","userOptions","defaultOptions","moveWithMkdirp","key","hasOwnProperty","stage","keys","length","operationList","Array","isArray","map","opts","push","parseFileOptions","reduce","previous","fn","retVal","filename","replace","fileHash","action","params","commandOrder","result","forEach","actionType","actionOptions","actionParams","actionItem","replaceHash","processAction","Error","zlib","level","compiler","comp","compilation","checkOptions","error","errors","afterEmit","cb","hash","hooks","thisCompilation","tap","tapAsync"],"mappings":"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"}